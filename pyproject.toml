[project]
name = "netimate"
version = "0.4.2"
description = "A lightweight, async-first network automation toolkit with plugin support and a rich CLI/shell interface."
readme = "README.md"
requires-python = ">=3.9"
keywords = [ "network automation", "async", "cli", "scrapli", "netmiko", "diff", "snapshot", "devops",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "Intended Audience :: Developers", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: System :: Networking", "Topic :: Utilities", "Typing :: Typed",]
dependencies = [ "netmiko>=4.5.0", "pyyaml>=6.0.2", "scrapli>=2025.1.30", "rich>=14.0.0", "textfsm>=1.1.3", "ttp>=0.9.5", "psycopg2-binary", "asyncssh", "anyio", "prompt-toolkit",]
[[project.authors]]
name = "Simon Di Giovanni"
email = "s.digiovanni92@gmail.com"

[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project.license]
text = "MPL-2.0"

[project.optional-dependencies]
test = [ "pytest>=8.3.5", "pytest-asyncio", "pytest-cov", "black", "ruff", "radon", "import-linter", "mypy", "types-PyYAML", "types-toml",]

[project.urls]
Homepage = "https://github.com/sjdigiovanni/netimate"
Repository = "https://github.com/sjdigiovanni/netimate"
Documentation = "https://github.com/sjdigiovanni/netimate#readme"
Issues = "https://github.com/sjdigiovanni/netimate/issues"

[project.scripts]
netimate = "netimate.__main__:main"

[tool.black]
line-length = 100
target-version = [ "py311",]
exclude = "/(\n    \\.venv\n  | __pycache__\n  | build\n  | dist\n)/\n"

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [ ".venv", "__pycache__", "build", "dist",]

[tool.mypy]
ignore_missing_imports = true

[tool.ruff.lint]
select = [ "E", "F", "I",]
ignore = [ "E501",]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
