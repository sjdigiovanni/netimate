[project]
name = "netimate"
version = "0.1.0"
description = "A lightweight, modular network automation framework."
authors = [{ name = "Simon Di Giovanni", email = "s.digiovanni92@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "netmiko>=4.5.0",
    "pyyaml>=6.0.2",
    "scrapli>=2025.1.30",
    "rich>=14.0.0",
    "textfsm>=1.1.3",
    "ttp>=0.9.5",
    "psycopg2-binary",
    "asyncssh",
    "anyio",
    "prompt-toolkit"
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "ruff",
    "radon",
    "import-linter",
    "mypy"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py311']
exclude = '''
/(
    \.venv
  | __pycache__
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".venv",
    "__pycache__",
    "build",
    "dist"
]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]  # If you want Ruff to only warn for long lines, not fail (or remove to enforce)

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
