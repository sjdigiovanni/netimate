[importlinter]
root_package = netimate

# ────────────────────────────────────────────────────────────────
# 1. Clean Architecture Layers
#    view -> plugins -> infrastructure -> core -> interfaces
# ────────────────────────────────────────────────────────────────
[importlinter:contract:enforce_layering]
name = Enforce clean layering (view -> application -> plugins -> infrastructure -> core -> interfaces)
type = layers
layers =
    netimate.view
    netimate.application
    netimate.plugins
    netimate.infrastructure
    netimate.core
    netimate.interfaces
    netimate.errors


# ────────────────────────────────────────────────────────────────
# 2. View isolation
#    View must not depend on core implementations or plugins
# ────────────────────────────────────────────────────────────────
[importlinter:contract:view_isolation]
name = View must not directly import core or plugins
type = forbidden
source_modules = netimate.view.*
forbidden_modules =
    netimate.core
    netimate.plugins
exclude_modules =
    netimate.infrastructure
    netimate.interfaces
    netimate.interfaces.*

# ────────────────────────────────────────────────────────────────
# 3. Core isolation
#    Core must not depend on infrastructure, plugins, views, or application
# ────────────────────────────────────────────────────────────────
[importlinter:contract:core_isolation]
name = Core must not depend on plugins, infrastructure, view or application
type = forbidden
source_modules = netimate.core.*
forbidden_modules =
    netimate.plugins
    netimate.infrastructure
    netimate.view
    netimate.application

# ────────────────────────────────────────────────────────────────
# 4. Interfaces purity
#    Interfaces must not depend on any other layer
# ────────────────────────────────────────────────────────────────
[importlinter:contract:interfaces_are_pure]
name = Interfaces must be independent of all other layers
type = forbidden
source_modules = netimate.interfaces.*
forbidden_modules =
    netimate.core
    netimate.infrastructure
    netimate.plugins
    netimate.view

# ────────────────────────────────────────────────────────────────
# 5. Models purity
#    Models are data-only, with no external dependencies
# ────────────────────────────────────────────────────────────────
[importlinter:contract:models_are_pure]
name = Models should not depend on anything else
type = forbidden
source_modules = netimate.models.*
forbidden_modules =
    netimate.interfaces
    netimate.core
    netimate.infrastructure
    netimate.plugins
    netimate.view

# ────────────────────────────────────────────────────────────────
# 6. Plugins should depend only on interfaces, models, and infrastructure
# ────────────────────────────────────────────────────────────────
[importlinter:contract:plugins_dependency_boundary]
name = Plugins must only depend on interfaces, models, and infrastructure
type = forbidden
source_modules = netimate.plugins.*
forbidden_modules =
    netimate.core
    netimate.view
exclude_modules =
    netimate.interfaces
    netimate.interfaces.*
    netimate.models
    netimate.models.*
    netimate.infrastructure
    netimate.infrastructure.*

# ────────────────────────────────────────────────────────────────
# 7. Plugin engine isolation
#    Plugin engine can depend on interfaces and models, but not app logic or views
# ────────────────────────────────────────────────────────────────
[importlinter:contract:plugin_engine_isolation]
name = Plugin engine must depend only on interfaces and models
type = forbidden
source_modules = netimate.core.plugin_engine.*
forbidden_modules =
    netimate.core.netimate_application
    netimate.core.runner
    netimate.infrastructure
    netimate.view
exclude_modules =
    netimate.interfaces
    netimate.interfaces.*
    netimate.models
    netimate.models.*

# ────────────────────────────────────────────────────────────────
# 8. Prevent plugin-to-plugin coupling
# ────────────────────────────────────────────────────────────────
[importlinter:contract:no_commands_to_others]
name = Commands adapter must not import other plugins
type = forbidden
source_modules =
    netimate.plugins.device_commands
forbidden_modules =
    netimate.plugins.connection_protocols
    netimate.plugins.device_repositories

[importlinter:contract:no_protocols_to_others]
name = Protocols adapter must not import other plugins
type = forbidden
source_modules = netimate.plugins.connection_protocols
forbidden_modules =
    netimate.plugins.commands
    netimate.plugins.device_repositories

[importlinter:contract:no_repositories_to_others]
name = Repositories adapter must not import other plugins
type = forbidden
source_modules = netimate.plugins.device_repositories
forbidden_modules =
    netimate.plugins.commands
    netimate.plugins.connection_protocols

[importlinter:contract:application_layer_boundary]
name = Application must not depend on views, core, or plugins
type = forbidden
source_modules = netimate.application.*
forbidden_modules =
    netimate.view
    netimate.plugins
    netimate.core
    netimate.core.*
exclude_modules =
    netimate.interfaces
    netimate.interfaces.*
    netimate.infrastructure
    netimate.infrastructure.*

# ────────────────────────────────────────────────────────────────
# 8. Prevent error module importing any other code
# ────────────────────────────────────────────────────────────────
[importlinter:contract:no_internal_imports_in_errors]
name = Errors module must not import other Netimate packages
type = forbidden
source_modules = netimate.errors
forbidden_modules =
    netimate.application
    netimate.core
    netimate.infrastructure
    netimate.interfaces
    netimate.plugins
    netimate.view

