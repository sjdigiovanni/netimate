name: CI + Release on Main

on:
  pull_request:
    types:
      - closed
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  build-test-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test] build twine toml semver

    - name: Run checks (black, ruff, mypy, pytest)
      run: |
        black --check . --exclude '^(build|dist|\.venv)/'
        ruff check . --exclude '^(build|dist|\.venv)/'
        mypy . --exclude '^(build|dist|\.venv)/'
        pytest

    - name: Detect bump level from PR title
      id: bump
      run: |
        TITLE="${{ github.event.pull_request.title }}"
        bump_type="patch"   # default
        shopt -s nocasematch
        [[ "$TITLE" =~ \[major\] ]] && bump_type="major"
        [[ "$TITLE" =~ \[minor\] ]] && bump_type="minor"
        [[ "$TITLE" =~ \[patch\] ]] && bump_type="patch"
        echo "bump_type=$bump_type" >> $GITHUB_OUTPUT

    - name: Bump version
      run: |
        python bump_version.py ${{ steps.bump.outputs.bump_type }}

    - name: Commit & tag version bump
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@users.noreply.github.com"
        VERSION=$(cat VERSION)
        git add pyproject.toml VERSION
        git commit -m "Release $VERSION"
        git tag v$VERSION
        git push origin main --follow-tags

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
